
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class ResultEditable extends javax.swing.JFrame {

    /**
     * Creates new form ResultEditable
     */
    public ResultEditable() {
        initComponents();
        setLocationRelativeTo(null);
    }
    
    public void setWhoCall(String val){
        whoCall = val;
    }

    
    private void display(int val){
        int cnt;
        
        try {
            statement=connect.prepareStatement("select *from studentresult");
            result=statement.executeQuery();
            ResultSetMetaData resMeta = result.getMetaData();
            
            cnt = resMeta.getColumnCount();
            DefaultTableModel dt= (DefaultTableModel)contentTable.getModel();
            dt.setRowCount(0);
            while(result.next()){
                
                Vector store= new Vector();
                
                for(int i=1; i<=cnt; i++){
                    
                    if(result.getString("class").equals(Integer.toString(val+6))){
                        store.add(result.getString("studentid"));
                        store.add(result.getString("studentname"));
                        store.add(result.getString("class"));
                        store.add(result.getString("gpa"));
                        store.add(result.getString("grade"));
                    }
                    
                }
                
                if(!store.isEmpty()){
                    dt.addRow(store);
                }
            }
        } 
        catch (SQLException ex) {
            Logger.getLogger(ResultEditable.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        selectClassLabel = new javax.swing.JLabel();
        selectClassCombobox = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        contentTable = new javax.swing.JTable();
        editStudentIDLabel = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        editStudentNameTextField = new javax.swing.JTextPane();
        jScrollPane6 = new javax.swing.JScrollPane();
        editGradeTextField = new javax.swing.JTextPane();
        jScrollPane7 = new javax.swing.JScrollPane();
        editStudentIdTextField = new javax.swing.JTextPane();
        jScrollPane8 = new javax.swing.JScrollPane();
        editGPATextField = new javax.swing.JTextPane();
        editStudentNameLabel = new javax.swing.JLabel();
        editGPALabel = new javax.swing.JLabel();
        editGradeLabel = new javax.swing.JLabel();
        updateButton = new javax.swing.JButton();
        deletButton = new javax.swing.JButton();
        insertButton = new javax.swing.JButton();
        editClassLabel = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        editClassTextField = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        titleLabel.setBackground(new java.awt.Color(255, 204, 204));
        titleLabel.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 36)); // NOI18N
        titleLabel.setForeground(new java.awt.Color(175, 5, 73));
        titleLabel.setText("Result Board");

        backButton.setBackground(new java.awt.Color(255, 153, 153));
        backButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        backButton.setForeground(new java.awt.Color(204, 0, 0));
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        selectClassLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        selectClassLabel.setText("Select Class:");

        selectClassCombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Class 6", "Class 7", "Class 8", "Class 9", "Class 10" }));
        selectClassCombobox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                selectClassComboboxMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                selectClassComboboxMousePressed(evt);
            }
        });
        selectClassCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectClassComboboxActionPerformed(evt);
            }
        });

        contentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Student ID:", "Name", "Class", "GPA(out of 5.00)", "Grade"
            }
        ));
        contentTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                contentTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(contentTable);

        editStudentIDLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        editStudentIDLabel.setText("Edit Student ID:");

        editStudentNameTextField.setMinimumSize(new java.awt.Dimension(6, 18));
        editStudentNameTextField.setPreferredSize(new java.awt.Dimension(6, 18));
        jScrollPane5.setViewportView(editStudentNameTextField);

        editGradeTextField.setMinimumSize(new java.awt.Dimension(6, 18));
        editGradeTextField.setPreferredSize(new java.awt.Dimension(6, 18));
        jScrollPane6.setViewportView(editGradeTextField);

        editStudentIdTextField.setMinimumSize(new java.awt.Dimension(6, 18));
        editStudentIdTextField.setPreferredSize(new java.awt.Dimension(6, 18));
        jScrollPane7.setViewportView(editStudentIdTextField);

        editGPATextField.setMinimumSize(new java.awt.Dimension(6, 18));
        editGPATextField.setPreferredSize(new java.awt.Dimension(6, 18));
        jScrollPane8.setViewportView(editGPATextField);

        editStudentNameLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        editStudentNameLabel.setText("Edit Student Name:");

        editGPALabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        editGPALabel.setText("Edit GPA:");

        editGradeLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        editGradeLabel.setText("Edit Grade:");

        updateButton.setBackground(new java.awt.Color(153, 255, 153));
        updateButton.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        updateButton.setForeground(new java.awt.Color(204, 0, 0));
        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        deletButton.setBackground(new java.awt.Color(153, 255, 153));
        deletButton.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        deletButton.setForeground(new java.awt.Color(204, 0, 0));
        deletButton.setText("Delete");
        deletButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletButtonActionPerformed(evt);
            }
        });

        insertButton.setBackground(new java.awt.Color(153, 255, 153));
        insertButton.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        insertButton.setForeground(new java.awt.Color(204, 0, 0));
        insertButton.setText("Insert");
        insertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertButtonActionPerformed(evt);
            }
        });

        editClassLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        editClassLabel.setText("Edit Class:");

        editClassTextField.setMinimumSize(new java.awt.Dimension(6, 18));
        editClassTextField.setPreferredSize(new java.awt.Dimension(6, 18));
        jScrollPane9.setViewportView(editClassTextField);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(backButton)
                        .addGap(252, 252, 252)
                        .addComponent(titleLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(selectClassLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(selectClassCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(26, 26, 26)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 608, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(88, 88, 88)
                                .addComponent(editStudentIDLabel)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(editGPALabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(editGradeLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(26, 26, 26))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(editClassLabel)
                                            .addComponent(editStudentNameLabel))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(245, 245, 245))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(87, 87, 87)
                                        .addComponent(insertButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(94, 94, 94)))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(deletButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(108, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backButton))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(selectClassLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(selectClassCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editStudentIDLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editGPALabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(editStudentNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(editGradeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(editClassLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insertButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deletButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        dispose();
        
        if(whoCall.equals("Teacher")){
            new TeacherDashboard().setVisible(true);
        }
        else if(whoCall.equals("Admin")){
            new AdminDashboard().setVisible(true);
        }
    }//GEN-LAST:event_backButtonActionPerformed

    private void selectClassComboboxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selectClassComboboxMouseClicked
        //nothing done with this feature.
    }//GEN-LAST:event_selectClassComboboxMouseClicked

    private void selectClassComboboxMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selectClassComboboxMousePressed
        //nothing done with this feature.
    }//GEN-LAST:event_selectClassComboboxMousePressed

    private void selectClassComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectClassComboboxActionPerformed
        value = selectClassCombobox.getSelectedIndex();
        display(value);
    }//GEN-LAST:event_selectClassComboboxActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        
        String studentId = editStudentIdTextField.getText();
        String studentName = editStudentNameTextField.getText();
        String studentClass = editClassTextField.getText();
        String gpa = editGPATextField.getText();
        String grade = editGradeTextField.getText();

        try {

            statement = connect.prepareStatement("update studentresult set studentid=?, studentname=?, class=?, gpa=?, grade=? where studentid=?");

            String ck = JOptionPane.showInputDialog(this, "Are you sure want to update?\nPress Y for Yes\nPress N for No");

            if(ck.equals("Y") || ck.equals("y")){

                statement.setString(1, studentId);
                statement.setString(2, studentName);
                statement.setString(3, studentClass);
                statement.setString(4, gpa);
                statement.setString(5, grade);
                statement.setString(6, oldStudentId);

                statement.executeUpdate();

                JOptionPane.showMessageDialog(this, "Updated!");

                editStudentIdTextField.setText("");
                editStudentNameTextField.setText("");
                editClassTextField.setText("");
                editGPATextField.setText("");
                editGradeTextField.setText("");

                display(value);
            }
        }
        catch (SQLException ex) {
            Logger.getLogger(ResultEditable.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void deletButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletButtonActionPerformed

        try {

            statement = connect.prepareStatement("delete from studentresult where bookname=?");

            String ck = JOptionPane.showInputDialog(this, "Are you sure want to delete?\nPress Y for Yes\nPress N for No");

            if(ck.equals("Y") || ck.equals("y")){

                statement.setString(1, oldStudentId);

                statement.executeUpdate();

                JOptionPane.showMessageDialog(this, "Deleted!");

                editStudentIdTextField.setText("");
                editStudentNameTextField.setText("");
                editClassTextField.setText("");
                editGPATextField.setText("");
                editGradeTextField.setText("");

                display(value);
            }
        }
        catch (SQLException ex) {
            Logger.getLogger(ResultEditable.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_deletButtonActionPerformed

    private void insertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertButtonActionPerformed
        
        String studentId = editStudentIdTextField.getText();
        String studentName = editStudentNameTextField.getText();
        String studentClass = editClassTextField.getText();
        String gpa = editGPATextField.getText();
        String grade = editGradeTextField.getText();
        
        try {

            statement = connect.prepareStatement("insert into studentresult (studentid, studentname, class, gpa, grade) values(?,?,?,?,?)");

            String ck = JOptionPane.showInputDialog(this, "Are you sure want to Insert?\nPress Y for Yes\nPress N for No");

            if(ck.equals("Y") || ck.equals("y")){

                statement.setString(1, studentId);
                statement.setString(2, studentName);
                statement.setString(3, studentClass);
                statement.setString(4, gpa);
                statement.setString(5, grade);

                statement.executeUpdate();

                JOptionPane.showMessageDialog(this, "Inserted!");

                editStudentIdTextField.setText("");
                editStudentNameTextField.setText("");
                editClassTextField.setText("");
                editGPATextField.setText("");
                editGradeTextField.setText("");

                display(value);
            }
        }
        catch (SQLException ex) {
            Logger.getLogger(ResultEditable.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_insertButtonActionPerformed

    private void contentTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_contentTableMouseClicked
        int row = contentTable.getSelectedRow();
        
        DefaultTableModel model = (DefaultTableModel) contentTable.getModel();
        
        oldStudentId = model.getValueAt(row, 0).toString();
        
        editStudentIdTextField.setText(model.getValueAt(row, 0).toString());
        editStudentNameTextField.setText(model.getValueAt(row, 1).toString());
        editClassTextField.setText(model.getValueAt(row, 2).toString());
        editGPATextField.setText(model.getValueAt(row, 3).toString());
        editGradeTextField.setText(model.getValueAt(row, 4).toString());
    }//GEN-LAST:event_contentTableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ResultEditable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ResultEditable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ResultEditable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ResultEditable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ResultEditable().setVisible(true);
            }
        });
    }
    
    ///custom variables.
    SQL objStudentInfo = new SQL();
    
    Connection connect = objStudentInfo.connection();
    
    PreparedStatement statement;
    ResultSet result;
    
    private String oldStudentId,whoCall;
    private int value;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JTable contentTable;
    private javax.swing.JButton deletButton;
    private javax.swing.JLabel editClassLabel;
    private javax.swing.JTextPane editClassTextField;
    private javax.swing.JLabel editGPALabel;
    private javax.swing.JTextPane editGPATextField;
    private javax.swing.JLabel editGradeLabel;
    private javax.swing.JTextPane editGradeTextField;
    private javax.swing.JLabel editStudentIDLabel;
    private javax.swing.JTextPane editStudentIdTextField;
    private javax.swing.JLabel editStudentNameLabel;
    private javax.swing.JTextPane editStudentNameTextField;
    private javax.swing.JButton insertButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JComboBox<String> selectClassCombobox;
    private javax.swing.JLabel selectClassLabel;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
